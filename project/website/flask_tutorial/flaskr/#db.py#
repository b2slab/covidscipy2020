import sqlite3

import sys
sys.path.insert(1,'/tmp/covidscipy2020/PythonApi')
from getEntries import getSpecific

import click
from flask import current_app, g

def import_db(pacient_names):
    values=["age", "gender", "symptoms"] #Examples of daata adquisition for plotting, other values can be plotted if are added on the database
    for v1 in values:
        d={v1:[]}
    for p_name in pacient_names:
        p_values=getEntries.getSpecific(p_name,values)
        for i in range(len(value))s:
            aux=aux+1
            data_plot={values(i):data_plot[values(i)].append(p_values(i))}
    return data_plot

def get_db():
    if 'db' not in g:
        g.db = sqlite3.connect(
            current_app.config['DATABASE'],
            detect_types=sqlite3.PARSE_DECLTYPES
        )
        g.db.row_factory = sqlite3.Row

    return g.db


def close_db(e=None):
    db = g.pop('db', None)

    if db is not None:
        db.close()

##################


def init_db():
    db = get_db()

    with current_app.open_resource('schema.sql') as f:
        db.executescript(f.read().decode('utf8'))


@click.command('init-db')
@with_appcontext
def init_db_command():
    """Clear the existing data and create new tables."""
    init_db()
    click.echo('Initialized the database.')

##################

def init_app(app):
    app.teardown_appcontext(close_db)
    app.cli.add_command(init_db_command)